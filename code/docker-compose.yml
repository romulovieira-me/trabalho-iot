# Trabalho final de Internet das Coisas
# Grupo: Rômulo Vieira, Rodrigo Dracxler, Anderson Beltrão, Carlos Salvador

version: "3.1"
# Declarando serviços
services:
# Declarando mongo
    mongo-db:
        image: mongo:4.4 # versão da imagem do mongo
        hostname: mongo-db # hostname para acessá-lo
        container_name: banco-mongodb # nome do contâiner
        expose:
            - "27017" # porta para acessar o banco de dados
        ports:
            - "27017:27017" # portas de entrada e saída para o banco de dados
        networks: # criando serviço de rede para interligar contêiners
            - default
        command: --bind_ip_all --smallfiles
        volumes:
            - mongo-db:/data
    orion: # criando serviço do context orion broker
        image: fiware/orion # imagem do Orion baixada do repositório docker
        hostname: orion
        container_name: fiware-orion-trabalho-iot
        depends_on: # criando dependência
            - mongo-db
        networks:
            - default
        expose:
            - "1026" # portas do orion context broker
            - "3000"
            - "3001"
        ports:
            - "1077:1026"
            - "3000:3000"
        command: -dbhost mongo-db -logLevel DEBUG
        healthcheck:
          test: curl --fail -s http://localhost:1026/version || exit 1 # comando para testar se context broker está funcionando
    
    iot-agent: # criando serviço do IoT Agent
        image: fiware/iotagent-ul:1.8.0
        hostname: iot-agent
        container_name: fiware-iot-agent-trabalho
        depends_on:
            - mongo-db
        networks:
            - default
        expose:
            - "4041"
            - "7896"
        ports:
            - "4041:4041"
            - "7896:7896"
        environment: # especificações do IoT Agent
            - "IOTA_CB_HOST=orion" # hostname do context broker para atualizar contexto
            - "IOTA_CB_PORT=1026" # Porta que o context broker escuta para atualizar contextto
            - "IOTA_NORTH_PORT=4041" # Porta usada para configurar o IoT Agent e receber atualização de contexto do broker
            - "IOTA_REGISTRY_TYPE=mongodb" # instância do mongoDB
            - "IOTA_LOG_LEVEL=DEBUG" # opção de debug para o IoT Agent
            - "IOTA_TIMESTAMP=true"
            - "IOTA_MONGO_HOST=mongo-db" # hostname do mongoDB - usado para manter informações dos dispositivos 
            - "IOTA_MONGO_PORT=27017" # porta onde o mongoDB está ouvindo 
            - "IOTA_MONGO_DB=iotagentul" # nome da base de dados usada pelo mongoDB
            - "IOTA_HTTP_PORT=7896" # porta onde o IoT Agent ouve o tráfego dos dispositivos IoT
            - "IOTA_PROVIDER_URL=http://iot-agent:4041" # URL passado ao context broker quando os comandos são registrados
        healthcheck:
            test: curl --fail -s http://localhost:4041/iot/about || exit 1 # testando o funcionamento da IoT Agent
# Encerrando serviços
networks:
  default:
    ipam:
        config:
          - subnet: 172.10.1.0/24

volumes:
  mongo-db:
